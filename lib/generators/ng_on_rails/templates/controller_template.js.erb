NgOnRailsApp.controller '<%="#{class_name.pluralize}"%>Controller', ($scope,<%="#{class_name}"%>,Rails) ->
  #
  # CONTROLLER SETUP
  #
  ctrl = this
  ctrl.rails = Rails
  ctrl.data = {}


  #
  # INITIALIZERS
  #
  ctrl.set<%="#{class_name}"%> = (<%="#{file_name}"%>)->
    ctrl.data.<%="#{file_name}"%> = <%="#{file_name}"%>
  ctrl.set<%="#{class_name.pluralize}"%> = (<%="#{plural_name}"%>)->
    ctrl.data.<%="#{plural_name}"%> = <%="#{plural_name}"%>


  #  
  # REST METHODS
  #
  ctrl.rest =
    index: ->
      params = {}
      <%="#{class_name}"%>.query(params).$promise.then (<%="#{plural_name}"%>) ->
        ctrl.data.<%="#{plural_name}"%> = <%="#{plural_name}"%>

    show: (<%="#{file_name}"%>_id)->
      <%="#{class_name}"%>.get({id: <%="#{file_name}"%>_id}).$promise.then (<%="#{file_name}"%>) ->
        ctrl.data.<%="#{file_name}"%> = <%="#{file_name}"%>
        
    new: (<%=belongs_to_parameters%>)->
      ctrl.clear()
      ctrl.data.active<%="#{class_name}"%> = {}
      ctrl.data.creating_new_<%="#{file_name}"%> = true
      <% 
        belongs_to_array.each do |relationship| 
      %>ctrl.data.active<%="#{class_name}"%>.<%= relationship%> = <%= relationship %>
      <% 
        end 
      %>

    create: ->
      if !(ctrl.locked || ctrl.<%="#{file_name}"%>_form.$error.required)
        ctrl.locked = true
        working_<%="#{file_name}"%> = angular.copy(ctrl.data.active<%="#{class_name}"%>)
        <%="#{class_name}"%>.save(
          working_<%="#{file_name}"%>,
          (<%="#{file_name}"%>)->
            ctrl.data.<%="#{plural_name}"%> ||= []
            ctrl.data.<%="#{plural_name}"%>.push(<%="#{file_name}"%>)
            ctrl.clear()
            ctrl.locked = false
          ,
          (error)->
            console.log("create_error:",error)
            ctrl.clear()
            ctrl.locked = false
        )

    edit: (<%="#{file_name}"%>,<%=belongs_to_parameters%>) ->
      ctrl.clear()
      ctrl.data.active<%="#{class_name}"%> = <%="#{file_name}"%>
      ctrl.data.editing_<%="#{file_name}"%> = true
      <%="#{file_name}"%>.is_displayed = false
      <% 
        belongs_to_array.each do |relationship| 
      %>ctrl.data.active<%="#{class_name}"%>.<%= relationship%> = <%= relationship %>
      <% 
        end 
      %>

    update: (<%="#{file_name}"%>)->
      if !(ctrl.locked || ctrl.<%="#{file_name}"%>_form.$error.required)
        ctrl.locked = true
        <%="#{file_name}"%> = ctrl.data.active<%="#{class_name}"%> unless !!<%="#{file_name}"%>
        working_<%="#{file_name}"%> = angular.extend(angular.copy(<%="#{file_name}"%>),ctrl.data.active<%="#{class_name}"%>)
        <%="#{class_name}"%>.update(
          working_<%="#{file_name}"%>,
          (<%="#{file_name}"%>)->
            # success handler
            ctrl.locked = false
          ,
          (error)->
            console.log("update_error:",error)
            ctrl.locked = false
        )
        ctrl.clear()

    delete: (index,<%="#{file_name}"%>,<%="#{plural_name}"%>)->
      <%="#{class_name}"%>.delete(
        <%="#{file_name}"%>, 
        (<%="#{file_name}"%>)->
          <%="#{plural_name}"%> ||= ctrl.data.<%="#{plural_name}"%>
          if !!<%="#{plural_name}"%>
            <%="#{plural_name}"%>.splice(index,1)
          else
            window.location.href = '/<%="#{plural_name}"%>'
        ,
        (error)->
          console.log("delete_error:",error)
      )
      ctrl.clear()


  #    
  # SCOPE METHODS
  #
  ctrl.clear = (doc)->
    ctrl.data.active<%="#{class_name}"%> = null
    ctrl.data.creating_new_<%="#{file_name}"%> = false
    ctrl.data.editing_<%="#{file_name}"%> = false

  ctrl.is_editing = (<%="#{file_name}"%>)->
    (ctrl.data.editing_<%="#{file_name}"%> && !!<%="#{file_name}"%> && <%="#{file_name}"%>.id == ctrl.data.active<%="#{class_name}"%>.id) ||
    (ctrl.data.creating_new_<%="#{file_name}"%> && !<%="#{file_name}"%>)

  ctrl.toggleDisplay = (<%="#{file_name}"%>)->
    <%="#{file_name}"%>.is_displayed = !<%="#{file_name}"%>.is_displayed

  #  
  # PRIVATE METHODS
  #   
  # => add methods here, not attached to the ctrl object to be used internally
  #   


  #
  # END
  #
  return